spring.datasource.url=jdbc:postgresql://localhost:5432/flow
spring.datasource.username=postgres
spring.datasource.password=superuser
spring.jpa.generate-ddl = true

#чтобы postgres driver не ругался при загрузке
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

#ключи от гугла при регистрации приложения
security.oauth2.client.clientId=973390491220-s1rr5em0k5sbb2akb8q5d8o49g3p9n62.apps.googleusercontent.com
security.oauth2.client.clientSecret=${clientSecret}
#авторизация будет происходить через форму
security.oauth2.client.clientAuthenticationScheme=form
#что запрашиватся у гугла после авторизации:openid,email,profile
security.oauth2.client.scope=openid,email,profile
security.oauth2.client.accessTokenUri=https://www.googleapis.com/oauth2/v4/token
security.oauth2.client.userAuthorizationUri=https://accounts.google.com/o/oauth2/v2/auth

security.oauth2.resource.userInfoUri=https://www.googleapis.com/oauth2/v3/userinfo
security.oauth2.resource.preferTokenInfo=true

server.port=8080

#всегда проверять наличие схемы и создавать, если ее нет
spring.session.jdbc.initialize-schema=always
#назвать таблицу SPRING_SESSION
spring.session.jdbc.table-name=SPRING_SESSION
#добавление скрипта, т.к. по умолчанию имя от гугля всего varchar(100)
spring.session.jdbc.schema=classpath:session_tables.sql



